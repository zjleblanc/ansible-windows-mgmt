---
- name: Assert required parameters
  ansible.builtin.assert:
    that:
      - aws_vpc_name
      - aws_subnet_name is defined
      - aws_security_group_name is defined
      - aws_key_pair_name is defined
      - config.instance_name is defined

- name: Get AMI info
  register: r_ami_info
  amazon.aws.ec2_ami_info:
    region: "{{ aws_region }}"
    owners: "{{ aws_image_owners | default(omit) }}"
    filters:
      name: "{{ config.ami_filter }}"
      architecture: "{{ config.ami_architecture | default(omit) }}"

- name: Extract AMI id
  ansible.builtin.set_fact:
    ec2_ami_id: "{{ (r_ami_info.images | selectattr('name', 'defined') | sort(attribute='creation_date'))[-2] }}"

- name: Get VPC id
  register: r_vpc_info
  amazon.aws.ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      tag:Name: "{{ aws_vpc_name }}"

- name: Get subnet id
  register: r_vpc_subnet_info
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ r_vpc_info['vpcs'][0]['id'] }}"
      tag:Name: "{{ aws_subnet_name }}"

- name: Launch EC2 Instance
  register: r_ec2
  amazon.aws.ec2_instance:
    region: "{{ aws_region }}"
    image_id: "{{ ec2_ami_id.image_id }}"
    instance_type: "{{ config.instance_type }}"
    key_name: "{{ aws_key_pair_name }}"
    security_group: "{{ aws_security_group_name }}"
    vpc_subnet_id: "{{ r_vpc_subnet_info['subnets'][0]['id'] }}"
    network:
      assign_public_ip: "{{ config.assign_public_ip }}"
    user_data: "{{ lookup('template', config.userdata_tmpl + '.j2') }}"
    tags: "{{ aws_instance_tags_default | combine(config.instance_tags) }}"
    wait: "{{ config.wait | default(true) }}"
    state: running

- name: List all EIP addresses
  register: r_eips
  amazon.aws.ec2_eip_info:
    region: "{{ aws_region }}"
    filters:
      tag:Name: "{{ config.instance_name }}"

- name: Handle elastic ip address
  when: config.assign_elastic_ip|default(false)
  block:
    - name: Allocate a new EIP and associate
      when: not r_eips.addresses | length
      amazon.aws.ec2_eip:
        region: "{{ aws_region }}"
        device_id: "{{ r_ec2.instances[0].instance_id }}"
        tags:
          Name: "{{ config.instance_name }}"

    - name: Associate existing EIP
      when: r_eips.addresses | length
      amazon.aws.ec2_eip:
        region: "{{ aws_region }}"
        device_id: "{{ r_ec2.instances[0].instance_id }}"
        ip: "{{ r_eips.addresses[0].public_ip }}"

- name: Add to in-memory inventory
  when: add_to_inventory|default(false)
  block:
    - name: Add host to in-memory inventory
      ansible.builtin.add_host:
        name: "{{ config.instance_name }}"
        groups: "{{ add_to_groups }}"
        ansible_host: "{{ r_ec2.instances[0].public_ip_address }}"
        win_private_ip: "{{ r_ec2.instances[0].private_ip_address }}"
        win_domain_controller: "{{ win_domain_controller | default(omit) }}"
        win_domain_controller_ip: "{{ win_domain_controller_ip | default(omit) }}"
